Name           : Layer          (n, c, h, w)         (s_w, s_h, p_w, p_h)

data           : Input          
data_data_split: Split          
conv1_1        : Convolution    (64, 3, 3, 3)        (2, 2, 1, 1)
relu1_1        : ReLU           
conv1_2        : Convolution    (64, 64, 3, 3)       (2, 2, 1, 1)
relu1_2        : ReLU           
pool_1         : Pooling        (type: MAX, 2, 2)    (2, 2, 0, 0)
conv2_1        : Convolution    (128, 64, 3, 3)      (1, 1, 1, 1)
relu2_1        : ReLU           
conv2_2        : Convolution    (128, 128, 3, 3)     (1, 1, 1, 1)
relu2_2        : ReLU           
pool_2         : Pooling        (type: MAX, 2, 2)    (2, 2, 0, 0)
conv3_1        : Convolution    (256, 128, 3, 3)     (1, 1, 1, 1)
relu3_1        : ReLU           
conv3_2        : Convolution    (256, 256, 3, 3)     (1, 1, 1, 1)
relu3_2        : ReLU           
conv3_3        : Convolution    (256, 256, 3, 3)     (1, 1, 1, 1)
relu3_3        : ReLU           
pool_3         : Pooling        (type: MAX, 2, 2)    (2, 2, 0, 0)
conv4_1        : Convolution    (512, 256, 3, 3)     (1, 1, 1, 1)
relu4_1        : ReLU           
conv4_2        : Convolution    (512, 512, 3, 3)     (1, 1, 1, 1)
relu4_2        : ReLU           
conv4_3        : Convolution    (512, 512, 3, 3)     (1, 1, 1, 1)
relu4_3        : ReLU           
pool_4         : Pooling        (type: MAX, 2, 2)    (2, 2, 0, 0)
conv5_1        : Convolution    (512, 512, 3, 3)     (1, 1, 1, 1)
relu5_1        : ReLU           
conv5_2        : Convolution    (512, 512, 3, 3)     (1, 1, 1, 1)
relu5_2        : ReLU           
conv5_3        : Convolution    (512, 512, 3, 3)     (1, 1, 1, 1)
relu5_3        : ReLU           
pool_5         : Pooling        (type: MAX, 2, 2)    (2, 2, 0, 0)
fc6            : InnerProduct   
relu6          : ReLU           
fc7            : InnerProduct   
relu7          : ReLU           
fc8            : InnerProduct   
prob_1         : Softmax        
conv_1_r1      : Convolution    (64, 3, 7, 7)        (2, 2, 3, 3)
bn_1_r1        : BatchNorm      
scale_1_r1     : Scale          
relu_1_r1      : ReLU           
pool1_r1       : Pooling        (type: MAX, 3, 3)    (2, 2, 0, 0)
pool1_r1_psplit: Split          
conv_stagench2a: Convolution    (64, 64, 3, 3)       (1, 1, 1, 1)
bn_stage0_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (64, 64, 3, 3)       (1, 1, 1, 1)
bn_stage0_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock0: Eltwise        
relu_stagelock0: ReLU           
relu_stagesplit: Split          
conv_stagench2a: Convolution    (64, 64, 3, 3)       (1, 1, 1, 1)
bn_stage0_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (64, 64, 3, 3)       (1, 1, 1, 1)
bn_stage0_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock1: Eltwise        
relu_stagelock1: ReLU           
relu_stagesplit: Split          
conv_stagench2a: Convolution    (64, 64, 3, 3)       (1, 1, 1, 1)
bn_stage0_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (64, 64, 3, 3)       (1, 1, 1, 1)
bn_stage0_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock2: Eltwise        
relu_stagelock2: ReLU           
relu_stagesplit: Split          
conv_stagertcut: Convolution    (128, 64, 1, 1)      (2, 2, 0, 0)
bn_stage1_rtcut: BatchNorm      
scale_stagrtcut: Scale          
conv_stagench2a: Convolution    (128, 64, 3, 3)      (2, 2, 1, 1)
bn_stage1_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (128, 128, 3, 3)     (1, 1, 1, 1)
bn_stage1_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock0: Eltwise        
relu_stagelock0: ReLU           
relu_stagesplit: Split          
conv_stagench2a: Convolution    (128, 128, 3, 3)     (1, 1, 1, 1)
bn_stage1_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (128, 128, 3, 3)     (1, 1, 1, 1)
bn_stage1_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock1: Eltwise        
relu_stagelock1: ReLU           
relu_stagesplit: Split          
conv_stagench2a: Convolution    (128, 128, 3, 3)     (1, 1, 1, 1)
bn_stage1_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (128, 128, 3, 3)     (1, 1, 1, 1)
bn_stage1_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock2: Eltwise        
relu_stagelock2: ReLU           
relu_stagesplit: Split          
conv_stagench2a: Convolution    (128, 128, 3, 3)     (1, 1, 1, 1)
bn_stage1_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (128, 128, 3, 3)     (1, 1, 1, 1)
bn_stage1_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock3: Eltwise        
relu_stagelock3: ReLU           
relu_stagesplit: Split          
conv_stagertcut: Convolution    (256, 128, 1, 1)     (2, 2, 0, 0)
bn_stage2_rtcut: BatchNorm      
scale_stagrtcut: Scale          
conv_stagench2a: Convolution    (256, 128, 3, 3)     (2, 2, 1, 1)
bn_stage2_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (256, 256, 3, 3)     (1, 1, 1, 1)
bn_stage2_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock0: Eltwise        
relu_stagelock0: ReLU           
relu_stagesplit: Split          
conv_stagench2a: Convolution    (256, 256, 3, 3)     (1, 1, 1, 1)
bn_stage2_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (256, 256, 3, 3)     (1, 1, 1, 1)
bn_stage2_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock1: Eltwise        
relu_stagelock1: ReLU           
relu_stagesplit: Split          
conv_stagench2a: Convolution    (256, 256, 3, 3)     (1, 1, 1, 1)
bn_stage2_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (256, 256, 3, 3)     (1, 1, 1, 1)
bn_stage2_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock2: Eltwise        
relu_stagelock2: ReLU           
relu_stagesplit: Split          
conv_stagench2a: Convolution    (256, 256, 3, 3)     (1, 1, 1, 1)
bn_stage2_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (256, 256, 3, 3)     (1, 1, 1, 1)
bn_stage2_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock3: Eltwise        
relu_stagelock3: ReLU           
relu_stagesplit: Split          
conv_stagench2a: Convolution    (256, 256, 3, 3)     (1, 1, 1, 1)
bn_stage2_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (256, 256, 3, 3)     (1, 1, 1, 1)
bn_stage2_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock4: Eltwise        
relu_stagelock4: ReLU           
relu_stagesplit: Split          
conv_stagench2a: Convolution    (256, 256, 3, 3)     (1, 1, 1, 1)
bn_stage2_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (256, 256, 3, 3)     (1, 1, 1, 1)
bn_stage2_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock5: Eltwise        
relu_stagelock5: ReLU           
relu_stagesplit: Split          
conv_stagertcut: Convolution    (512, 256, 1, 1)     (2, 2, 0, 0)
bn_stage3_rtcut: BatchNorm      
scale_stagrtcut: Scale          
conv_stagench2a: Convolution    (512, 256, 3, 3)     (2, 2, 1, 1)
bn_stage3_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (512, 512, 3, 3)     (1, 1, 1, 1)
bn_stage3_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock0: Eltwise        
relu_stagelock0: ReLU           
relu_stagesplit: Split          
conv_stagench2a: Convolution    (512, 512, 3, 3)     (1, 1, 1, 1)
bn_stage3_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (512, 512, 3, 3)     (1, 1, 1, 1)
bn_stage3_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock1: Eltwise        
relu_stagelock1: ReLU           
relu_stagesplit: Split          
conv_stagench2a: Convolution    (512, 512, 3, 3)     (1, 1, 1, 1)
bn_stage3_nch2a: BatchNorm      
scale_stagnch2a: Scale          
relu_stagench2a: ReLU           
conv_stagench2b: Convolution    (512, 512, 3, 3)     (1, 1, 1, 1)
bn_stage3_nch2b: BatchNorm      
scale_stagnch2b: Scale          
eltwise_stlock2: Eltwise        
relu_stagelock2: ReLU           
pool_r1        : Pooling        (type: AVE, 7, 7)    (1, 1, 0, 0)
fc1000_r1      : InnerProduct   
prob_2         : Softmax        
prob           : Concat         

Blobs:
data           :  (1, 3, 224, 224)
data_data_lit_0:  (1, 3, 224, 224)
data_data_lit_1:  (1, 3, 224, 224)
conv1_1        :  (1, 64, 112, 112)
relu1_1        :  (1, 64, 112, 112)
conv1_2        :  (1, 64, 56, 56)
relu1_2        :  (1, 64, 56, 56)
pool_1         :  (1, 64, 28, 28)
conv2_1        :  (1, 128, 28, 28)
relu2_1        :  (1, 128, 28, 28)
conv2_2        :  (1, 128, 28, 28)
relu2_2        :  (1, 128, 28, 28)
pool_2         :  (1, 128, 14, 14)
conv3_1        :  (1, 256, 14, 14)
relu3_1        :  (1, 256, 14, 14)
conv3_2        :  (1, 256, 14, 14)
relu3_2        :  (1, 256, 14, 14)
conv3_3        :  (1, 256, 14, 14)
relu3_3        :  (1, 256, 14, 14)
pool_3         :  (1, 256, 7, 7)
conv4_1        :  (1, 512, 7, 7)
relu4_1        :  (1, 512, 7, 7)
conv4_2        :  (1, 512, 7, 7)
relu4_2        :  (1, 512, 7, 7)
conv4_3        :  (1, 512, 7, 7)
relu4_3        :  (1, 512, 7, 7)
pool_4         :  (1, 512, 4, 4)
conv5_1        :  (1, 512, 4, 4)
relu5_1        :  (1, 512, 4, 4)
conv5_2        :  (1, 512, 4, 4)
relu5_2        :  (1, 512, 4, 4)
conv5_3        :  (1, 512, 4, 4)
relu5_3        :  (1, 512, 4, 4)
pool_5         :  (1, 512, 2, 2)
fc6            :  (1, 4096)
relu6          :  (1, 4096)
fc7            :  (1, 4096)
relu7          :  (1, 4096)
fc8            :  (1, 1000)
prob_1         :  (1, 1000)
conv_1_r1      :  (1, 64, 112, 112)
bn_1_r1        :  (1, 64, 112, 112)
scale_1_r1     :  (1, 64, 112, 112)
relu_1_r1      :  (1, 64, 112, 112)
pool1_r1       :  (1, 64, 56, 56)
pool1_r1_plit_0:  (1, 64, 56, 56)
pool1_r1_plit_1:  (1, 64, 56, 56)
conv_stagench2a:  (1, 64, 56, 56)
bn_stage0_nch2a:  (1, 64, 56, 56)
scale_stagnch2a:  (1, 64, 56, 56)
relu_stagench2a:  (1, 64, 56, 56)
conv_stagench2b:  (1, 64, 56, 56)
bn_stage0_nch2b:  (1, 64, 56, 56)
scale_stagnch2b:  (1, 64, 56, 56)
eltwise_stlock0:  (1, 64, 56, 56)
relu_stagelock0:  (1, 64, 56, 56)
relu_stagelit_0:  (1, 64, 56, 56)
relu_stagelit_1:  (1, 64, 56, 56)
conv_stagench2a:  (1, 64, 56, 56)
bn_stage0_nch2a:  (1, 64, 56, 56)
scale_stagnch2a:  (1, 64, 56, 56)
relu_stagench2a:  (1, 64, 56, 56)
conv_stagench2b:  (1, 64, 56, 56)
bn_stage0_nch2b:  (1, 64, 56, 56)
scale_stagnch2b:  (1, 64, 56, 56)
eltwise_stlock1:  (1, 64, 56, 56)
relu_stagelock1:  (1, 64, 56, 56)
relu_stagelit_0:  (1, 64, 56, 56)
relu_stagelit_1:  (1, 64, 56, 56)
conv_stagench2a:  (1, 64, 56, 56)
bn_stage0_nch2a:  (1, 64, 56, 56)
scale_stagnch2a:  (1, 64, 56, 56)
relu_stagench2a:  (1, 64, 56, 56)
conv_stagench2b:  (1, 64, 56, 56)
bn_stage0_nch2b:  (1, 64, 56, 56)
scale_stagnch2b:  (1, 64, 56, 56)
eltwise_stlock2:  (1, 64, 56, 56)
relu_stagelock2:  (1, 64, 56, 56)
relu_stagelit_0:  (1, 64, 56, 56)
relu_stagelit_1:  (1, 64, 56, 56)
conv_stagertcut:  (1, 128, 28, 28)
bn_stage1_rtcut:  (1, 128, 28, 28)
scale_stagrtcut:  (1, 128, 28, 28)
conv_stagench2a:  (1, 128, 28, 28)
bn_stage1_nch2a:  (1, 128, 28, 28)
scale_stagnch2a:  (1, 128, 28, 28)
relu_stagench2a:  (1, 128, 28, 28)
conv_stagench2b:  (1, 128, 28, 28)
bn_stage1_nch2b:  (1, 128, 28, 28)
scale_stagnch2b:  (1, 128, 28, 28)
eltwise_stlock0:  (1, 128, 28, 28)
relu_stagelock0:  (1, 128, 28, 28)
relu_stagelit_0:  (1, 128, 28, 28)
relu_stagelit_1:  (1, 128, 28, 28)
conv_stagench2a:  (1, 128, 28, 28)
bn_stage1_nch2a:  (1, 128, 28, 28)
scale_stagnch2a:  (1, 128, 28, 28)
relu_stagench2a:  (1, 128, 28, 28)
conv_stagench2b:  (1, 128, 28, 28)
bn_stage1_nch2b:  (1, 128, 28, 28)
scale_stagnch2b:  (1, 128, 28, 28)
eltwise_stlock1:  (1, 128, 28, 28)
relu_stagelock1:  (1, 128, 28, 28)
relu_stagelit_0:  (1, 128, 28, 28)
relu_stagelit_1:  (1, 128, 28, 28)
conv_stagench2a:  (1, 128, 28, 28)
bn_stage1_nch2a:  (1, 128, 28, 28)
scale_stagnch2a:  (1, 128, 28, 28)
relu_stagench2a:  (1, 128, 28, 28)
conv_stagench2b:  (1, 128, 28, 28)
bn_stage1_nch2b:  (1, 128, 28, 28)
scale_stagnch2b:  (1, 128, 28, 28)
eltwise_stlock2:  (1, 128, 28, 28)
relu_stagelock2:  (1, 128, 28, 28)
relu_stagelit_0:  (1, 128, 28, 28)
relu_stagelit_1:  (1, 128, 28, 28)
conv_stagench2a:  (1, 128, 28, 28)
bn_stage1_nch2a:  (1, 128, 28, 28)
scale_stagnch2a:  (1, 128, 28, 28)
relu_stagench2a:  (1, 128, 28, 28)
conv_stagench2b:  (1, 128, 28, 28)
bn_stage1_nch2b:  (1, 128, 28, 28)
scale_stagnch2b:  (1, 128, 28, 28)
eltwise_stlock3:  (1, 128, 28, 28)
relu_stagelock3:  (1, 128, 28, 28)
relu_stagelit_0:  (1, 128, 28, 28)
relu_stagelit_1:  (1, 128, 28, 28)
conv_stagertcut:  (1, 256, 14, 14)
bn_stage2_rtcut:  (1, 256, 14, 14)
scale_stagrtcut:  (1, 256, 14, 14)
conv_stagench2a:  (1, 256, 14, 14)
bn_stage2_nch2a:  (1, 256, 14, 14)
scale_stagnch2a:  (1, 256, 14, 14)
relu_stagench2a:  (1, 256, 14, 14)
conv_stagench2b:  (1, 256, 14, 14)
bn_stage2_nch2b:  (1, 256, 14, 14)
scale_stagnch2b:  (1, 256, 14, 14)
eltwise_stlock0:  (1, 256, 14, 14)
relu_stagelock0:  (1, 256, 14, 14)
relu_stagelit_0:  (1, 256, 14, 14)
relu_stagelit_1:  (1, 256, 14, 14)
conv_stagench2a:  (1, 256, 14, 14)
bn_stage2_nch2a:  (1, 256, 14, 14)
scale_stagnch2a:  (1, 256, 14, 14)
relu_stagench2a:  (1, 256, 14, 14)
conv_stagench2b:  (1, 256, 14, 14)
bn_stage2_nch2b:  (1, 256, 14, 14)
scale_stagnch2b:  (1, 256, 14, 14)
eltwise_stlock1:  (1, 256, 14, 14)
relu_stagelock1:  (1, 256, 14, 14)
relu_stagelit_0:  (1, 256, 14, 14)
relu_stagelit_1:  (1, 256, 14, 14)
conv_stagench2a:  (1, 256, 14, 14)
bn_stage2_nch2a:  (1, 256, 14, 14)
scale_stagnch2a:  (1, 256, 14, 14)
relu_stagench2a:  (1, 256, 14, 14)
conv_stagench2b:  (1, 256, 14, 14)
bn_stage2_nch2b:  (1, 256, 14, 14)
scale_stagnch2b:  (1, 256, 14, 14)
eltwise_stlock2:  (1, 256, 14, 14)
relu_stagelock2:  (1, 256, 14, 14)
relu_stagelit_0:  (1, 256, 14, 14)
relu_stagelit_1:  (1, 256, 14, 14)
conv_stagench2a:  (1, 256, 14, 14)
bn_stage2_nch2a:  (1, 256, 14, 14)
scale_stagnch2a:  (1, 256, 14, 14)
relu_stagench2a:  (1, 256, 14, 14)
conv_stagench2b:  (1, 256, 14, 14)
bn_stage2_nch2b:  (1, 256, 14, 14)
scale_stagnch2b:  (1, 256, 14, 14)
eltwise_stlock3:  (1, 256, 14, 14)
relu_stagelock3:  (1, 256, 14, 14)
relu_stagelit_0:  (1, 256, 14, 14)
relu_stagelit_1:  (1, 256, 14, 14)
conv_stagench2a:  (1, 256, 14, 14)
bn_stage2_nch2a:  (1, 256, 14, 14)
scale_stagnch2a:  (1, 256, 14, 14)
relu_stagench2a:  (1, 256, 14, 14)
conv_stagench2b:  (1, 256, 14, 14)
bn_stage2_nch2b:  (1, 256, 14, 14)
scale_stagnch2b:  (1, 256, 14, 14)
eltwise_stlock4:  (1, 256, 14, 14)
relu_stagelock4:  (1, 256, 14, 14)
relu_stagelit_0:  (1, 256, 14, 14)
relu_stagelit_1:  (1, 256, 14, 14)
conv_stagench2a:  (1, 256, 14, 14)
bn_stage2_nch2a:  (1, 256, 14, 14)
scale_stagnch2a:  (1, 256, 14, 14)
relu_stagench2a:  (1, 256, 14, 14)
conv_stagench2b:  (1, 256, 14, 14)
bn_stage2_nch2b:  (1, 256, 14, 14)
scale_stagnch2b:  (1, 256, 14, 14)
eltwise_stlock5:  (1, 256, 14, 14)
relu_stagelock5:  (1, 256, 14, 14)
relu_stagelit_0:  (1, 256, 14, 14)
relu_stagelit_1:  (1, 256, 14, 14)
conv_stagertcut:  (1, 512, 7, 7)
bn_stage3_rtcut:  (1, 512, 7, 7)
scale_stagrtcut:  (1, 512, 7, 7)
conv_stagench2a:  (1, 512, 7, 7)
bn_stage3_nch2a:  (1, 512, 7, 7)
scale_stagnch2a:  (1, 512, 7, 7)
relu_stagench2a:  (1, 512, 7, 7)
conv_stagench2b:  (1, 512, 7, 7)
bn_stage3_nch2b:  (1, 512, 7, 7)
scale_stagnch2b:  (1, 512, 7, 7)
eltwise_stlock0:  (1, 512, 7, 7)
relu_stagelock0:  (1, 512, 7, 7)
relu_stagelit_0:  (1, 512, 7, 7)
relu_stagelit_1:  (1, 512, 7, 7)
conv_stagench2a:  (1, 512, 7, 7)
bn_stage3_nch2a:  (1, 512, 7, 7)
scale_stagnch2a:  (1, 512, 7, 7)
relu_stagench2a:  (1, 512, 7, 7)
conv_stagench2b:  (1, 512, 7, 7)
bn_stage3_nch2b:  (1, 512, 7, 7)
scale_stagnch2b:  (1, 512, 7, 7)
eltwise_stlock1:  (1, 512, 7, 7)
relu_stagelock1:  (1, 512, 7, 7)
relu_stagelit_0:  (1, 512, 7, 7)
relu_stagelit_1:  (1, 512, 7, 7)
conv_stagench2a:  (1, 512, 7, 7)
bn_stage3_nch2a:  (1, 512, 7, 7)
scale_stagnch2a:  (1, 512, 7, 7)
relu_stagench2a:  (1, 512, 7, 7)
conv_stagench2b:  (1, 512, 7, 7)
bn_stage3_nch2b:  (1, 512, 7, 7)
scale_stagnch2b:  (1, 512, 7, 7)
eltwise_stlock2:  (1, 512, 7, 7)
relu_stagelock2:  (1, 512, 7, 7)
pool_r1        :  (1, 512, 1, 1)
fc1000_r1      :  (1, 1000)
prob_2         :  (1, 1000)
prob           :  (1, 2000)
